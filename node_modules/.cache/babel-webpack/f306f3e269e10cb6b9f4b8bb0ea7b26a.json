{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, TemplateRef, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputBoolean, InputNumber } from '@ng-util/util';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@ng-util/lazy';\n\nfunction TinymceComponent_textarea_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"textarea\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"id\", ctx_r0.id)(\"placeholder\", ctx_r0.placeholder);\n  }\n}\n\nfunction TinymceComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"id\", ctx_r1.id);\n  }\n}\n\nfunction TinymceComponent_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3._loading);\n  }\n}\n\nfunction TinymceComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TinymceComponent_div_2_ng_container_1_Template, 2, 1, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2._loading)(\"ngIfElse\", ctx_r2._loadingTpl);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nclass TinymceOptions {\n  constructor() {\n    /** 指定tinymce目录路径，默认：`./assets/tinymce/` */\n    this.baseURL = './assets/tinymce/';\n    /** 指定tinymce文件名，默认：`tinymce.min.js` */\n\n    this.fileName = 'tinymce.min.js';\n  }\n\n}\n\nconst isSSR = !(typeof document === 'object' && !!document);\n\nclass TinymceComponent {\n  constructor(defConfig, lazySrv, ngZone, doc, cd) {\n    this.defConfig = defConfig;\n    this.lazySrv = lazySrv;\n    this.ngZone = ngZone;\n    this.doc = doc;\n    this.cd = cd;\n    this.value = '';\n    this.load = true;\n    this.id = `_tinymce-${Math.random().toString(36).substring(2)}`;\n    this.placeholder = '';\n    this.inline = false;\n    this._disabled = false;\n    this._loading = null;\n    this._loadingTpl = null;\n    /** 延迟初始化 */\n\n    this.delay = 0;\n    this.ready = new EventEmitter();\n  }\n\n  set disabled(value) {\n    this._disabled = value;\n    this.setDisabled();\n  }\n\n  set loading(value) {\n    if (value instanceof TemplateRef) {\n      this._loading = null;\n      this._loadingTpl = value;\n    } else {\n      this._loading = value;\n    }\n  }\n\n  get instance() {\n    return this._instance;\n  }\n\n  _getWin() {\n    return this.doc.defaultView || window;\n  }\n\n  initDelay() {\n    if (isSSR) {\n      return;\n    }\n\n    setTimeout(() => this.init(), Math.min(0, this.delay));\n  }\n\n  init() {\n    const win = this._getWin();\n\n    if (!win.tinymce) {\n      throw new Error('tinymce js文件加载失败');\n    }\n\n    const {\n      defConfig,\n      config,\n      id,\n      inline\n    } = this;\n\n    if (this._instance) {\n      return;\n    }\n\n    if (defConfig.baseURL) {\n      let url = '' + defConfig.baseURL;\n\n      if (url.endsWith('/')) {\n        url = url.substr(0, url.length - 1);\n      }\n\n      win.tinymce.baseURL = url;\n    }\n\n    const userOptions = Object.assign(Object.assign({}, defConfig.config), config);\n    const options = Object.assign(Object.assign(Object.assign({\n      selector: `#` + id,\n      inline\n    }, defConfig.config), config), {\n      setup: editor => {\n        this._instance = editor;\n\n        if (this.onChange) {\n          editor.on('change keyup', () => {\n            this.value = editor.getContent();\n            this.ngZone.run(() => this.onChange(this.value));\n          });\n        }\n\n        if (typeof userOptions.setup === 'function') {\n          userOptions.setup(editor);\n        }\n      },\n      init_instance_callback: editor => {\n        if (editor && this.value) {\n          editor.setContent(this.value);\n        }\n\n        this.setDisabled();\n\n        if (typeof userOptions.init_instance_callback === 'function') {\n          userOptions.init_instance_callback(editor);\n        }\n\n        this.ready.emit(this._instance);\n      }\n    });\n\n    if (userOptions.auto_focus) {\n      options.auto_focus = id;\n    }\n\n    this.ngZone.runOutsideAngular(() => win.tinymce.init(options));\n    this.load = false;\n    this.cd.detectChanges();\n  }\n\n  destroy() {\n    if (!this._instance) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this._instance.off();\n\n      this._instance.remove('#' + this.id);\n    });\n    this._instance = null;\n  }\n\n  setDisabled() {\n    if (!this._instance) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => this._instance.setMode(this._disabled ? 'readonly' : 'design'));\n  }\n\n  ngAfterViewInit() {\n    if (isSSR) {\n      return;\n    } // 已经存在对象无须进入懒加载模式\n\n\n    if (this._getWin().tinymce) {\n      this.initDelay();\n      return;\n    }\n\n    const {\n      defConfig\n    } = this;\n    const baseURL = defConfig && defConfig.baseURL;\n    const fileName = defConfig && defConfig.fileName;\n    const url = (baseURL || './assets/tinymce/') + (fileName || 'tinymce.min.js');\n    this.lazySrv.monitor(url).subscribe(() => this.initDelay());\n    this.lazySrv.load(url);\n  }\n\n  ngOnChanges(changes) {\n    if (this._instance && changes.config) {\n      this.destroy();\n      this.initDelay();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  writeValue(value) {\n    // value should be NOT NULL\n    this.value = value || '';\n\n    if (this._instance) {\n      this.ngZone.runOutsideAngular(() => this._instance.setContent(this.value));\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.setDisabled();\n  }\n\n}\n\nTinymceComponent.ɵfac = function TinymceComponent_Factory(t) {\n  return new (t || TinymceComponent)(i0.ɵɵdirectiveInject(TinymceOptions), i0.ɵɵdirectiveInject(i2.NuLazyService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTinymceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TinymceComponent,\n  selectors: [[\"tinymce\"]],\n  inputs: {\n    config: \"config\",\n    placeholder: \"placeholder\",\n    inline: \"inline\",\n    disabled: \"disabled\",\n    loading: \"loading\",\n    delay: \"delay\"\n  },\n  outputs: {\n    ready: \"ready\"\n  },\n  exportAs: [\"tinymce\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TinymceComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 3,\n  consts: [[\"class\", \"tinymce-selector\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"loading\", 4, \"ngIf\"], [1, \"tinymce-selector\"], [1, \"loading\"], [4, \"ngIf\", \"ngIfElse\"]],\n  template: function TinymceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, TinymceComponent_textarea_0_Template, 1, 2, \"textarea\", 0);\n      i0.ɵɵtemplate(1, TinymceComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, TinymceComponent_div_2_Template, 2, 2, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.inline);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.inline);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.load);\n    }\n  },\n  directives: [i3.NgIf],\n  styles: [\"\\n      tinymce .tinymce-selector {\\n        display: none;\\n      }\\n    \"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], TinymceComponent.prototype, \"inline\", void 0);\n\n__decorate([InputBoolean()], TinymceComponent.prototype, \"disabled\", null);\n\n__decorate([InputNumber()], TinymceComponent.prototype, \"delay\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TinymceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tinymce',\n      exportAs: 'tinymce',\n      template: `\n    <textarea *ngIf=\"!inline\" [attr.id]=\"id\" [attr.placeholder]=\"placeholder\" class=\"tinymce-selector\"></textarea>\n    <div *ngIf=\"inline\" [attr.id]=\"id\"><ng-content></ng-content></div>\n    <div class=\"loading\" *ngIf=\"load\">\n      <ng-container *ngIf=\"_loading; else _loadingTpl\">{{ _loading }}</ng-container>\n    </div>\n  `,\n      styles: [`\n      tinymce .tinymce-selector {\n        display: none;\n      }\n    `],\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => TinymceComponent),\n        multi: true\n      }],\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: TinymceOptions\n    }, {\n      type: i2.NuLazyService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    config: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgxTinymceModule {\n  static forRoot(options) {\n    return {\n      ngModule: NgxTinymceModule,\n      providers: [{\n        provide: TinymceOptions,\n        useValue: options\n      }]\n    };\n  }\n\n}\n\nNgxTinymceModule.ɵfac = function NgxTinymceModule_Factory(t) {\n  return new (t || NgxTinymceModule)();\n};\n\nNgxTinymceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxTinymceModule,\n  declarations: [TinymceComponent],\n  imports: [CommonModule],\n  exports: [TinymceComponent]\n});\nNgxTinymceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxTinymceModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TinymceComponent],\n      exports: [TinymceComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgxTinymceModule, TinymceComponent, TinymceOptions }; //# sourceMappingURL=ngx-tinymce.js.map","map":{"version":3,"sources":["/opt/lampp/htdocs/uLearnFrontend_SuperAdmin/node_modules/ngx-tinymce/fesm2015/ngx-tinymce.js"],"names":["__decorate","i0","EventEmitter","TemplateRef","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Input","Output","NgModule","NG_VALUE_ACCESSOR","InputBoolean","InputNumber","i3","DOCUMENT","CommonModule","i2","TinymceOptions","constructor","baseURL","fileName","isSSR","document","TinymceComponent","defConfig","lazySrv","ngZone","doc","cd","value","load","id","Math","random","toString","substring","placeholder","inline","_disabled","_loading","_loadingTpl","delay","ready","disabled","setDisabled","loading","instance","_instance","_getWin","defaultView","window","initDelay","setTimeout","init","min","win","tinymce","Error","config","url","endsWith","substr","length","userOptions","Object","assign","options","selector","setup","editor","onChange","on","getContent","run","init_instance_callback","setContent","emit","auto_focus","runOutsideAngular","detectChanges","destroy","off","remove","setMode","ngAfterViewInit","monitor","subscribe","ngOnChanges","changes","ngOnDestroy","writeValue","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","ɵfac","NuLazyService","NgZone","ChangeDetectorRef","ɵcmp","provide","useExisting","multi","NgIf","prototype","type","args","exportAs","template","styles","providers","preserveWhitespaces","encapsulation","None","changeDetection","OnPush","undefined","decorators","NgxTinymceModule","forRoot","ngModule","useValue","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, TemplateRef, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputBoolean, InputNumber } from '@ng-util/util';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@ng-util/lazy';\n\nclass TinymceOptions {\n    constructor() {\n        /** 指定tinymce目录路径，默认：`./assets/tinymce/` */\n        this.baseURL = './assets/tinymce/';\n        /** 指定tinymce文件名，默认：`tinymce.min.js` */\n        this.fileName = 'tinymce.min.js';\n    }\n}\n\nconst isSSR = !(typeof document === 'object' && !!document);\nclass TinymceComponent {\n    constructor(defConfig, lazySrv, ngZone, doc, cd) {\n        this.defConfig = defConfig;\n        this.lazySrv = lazySrv;\n        this.ngZone = ngZone;\n        this.doc = doc;\n        this.cd = cd;\n        this.value = '';\n        this.load = true;\n        this.id = `_tinymce-${Math.random().toString(36).substring(2)}`;\n        this.placeholder = '';\n        this.inline = false;\n        this._disabled = false;\n        this._loading = null;\n        this._loadingTpl = null;\n        /** 延迟初始化 */\n        this.delay = 0;\n        this.ready = new EventEmitter();\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this.setDisabled();\n    }\n    set loading(value) {\n        if (value instanceof TemplateRef) {\n            this._loading = null;\n            this._loadingTpl = value;\n        }\n        else {\n            this._loading = value;\n        }\n    }\n    get instance() {\n        return this._instance;\n    }\n    _getWin() {\n        return this.doc.defaultView || window;\n    }\n    initDelay() {\n        if (isSSR) {\n            return;\n        }\n        setTimeout(() => this.init(), Math.min(0, this.delay));\n    }\n    init() {\n        const win = this._getWin();\n        if (!win.tinymce) {\n            throw new Error('tinymce js文件加载失败');\n        }\n        const { defConfig, config, id, inline } = this;\n        if (this._instance) {\n            return;\n        }\n        if (defConfig.baseURL) {\n            let url = '' + defConfig.baseURL;\n            if (url.endsWith('/')) {\n                url = url.substr(0, url.length - 1);\n            }\n            win.tinymce.baseURL = url;\n        }\n        const userOptions = Object.assign(Object.assign({}, defConfig.config), config);\n        const options = Object.assign(Object.assign(Object.assign({ selector: `#` + id, inline }, defConfig.config), config), { setup: (editor) => {\n                this._instance = editor;\n                if (this.onChange) {\n                    editor.on('change keyup', () => {\n                        this.value = editor.getContent();\n                        this.ngZone.run(() => this.onChange(this.value));\n                    });\n                }\n                if (typeof userOptions.setup === 'function') {\n                    userOptions.setup(editor);\n                }\n            }, init_instance_callback: (editor) => {\n                if (editor && this.value) {\n                    editor.setContent(this.value);\n                }\n                this.setDisabled();\n                if (typeof userOptions.init_instance_callback === 'function') {\n                    userOptions.init_instance_callback(editor);\n                }\n                this.ready.emit(this._instance);\n            } });\n        if (userOptions.auto_focus) {\n            options.auto_focus = id;\n        }\n        this.ngZone.runOutsideAngular(() => win.tinymce.init(options));\n        this.load = false;\n        this.cd.detectChanges();\n    }\n    destroy() {\n        if (!this._instance) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this._instance.off();\n            this._instance.remove('#' + this.id);\n        });\n        this._instance = null;\n    }\n    setDisabled() {\n        if (!this._instance) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => this._instance.setMode(this._disabled ? 'readonly' : 'design'));\n    }\n    ngAfterViewInit() {\n        if (isSSR) {\n            return;\n        }\n        // 已经存在对象无须进入懒加载模式\n        if (this._getWin().tinymce) {\n            this.initDelay();\n            return;\n        }\n        const { defConfig } = this;\n        const baseURL = defConfig && defConfig.baseURL;\n        const fileName = defConfig && defConfig.fileName;\n        const url = (baseURL || './assets/tinymce/') + (fileName || 'tinymce.min.js');\n        this.lazySrv.monitor(url).subscribe(() => this.initDelay());\n        this.lazySrv.load(url);\n    }\n    ngOnChanges(changes) {\n        if (this._instance && changes.config) {\n            this.destroy();\n            this.initDelay();\n        }\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    writeValue(value) {\n        // value should be NOT NULL\n        this.value = value || '';\n        if (this._instance) {\n            this.ngZone.runOutsideAngular(() => this._instance.setContent(this.value));\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.setDisabled();\n    }\n}\nTinymceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: TinymceComponent, deps: [{ token: TinymceOptions }, { token: i2.NuLazyService }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTinymceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.2\", type: TinymceComponent, selector: \"tinymce\", inputs: { config: \"config\", placeholder: \"placeholder\", inline: \"inline\", disabled: \"disabled\", loading: \"loading\", delay: \"delay\" }, outputs: { ready: \"ready\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TinymceComponent),\n            multi: true,\n        },\n    ], exportAs: [\"tinymce\"], usesOnChanges: true, ngImport: i0, template: `\n    <textarea *ngIf=\"!inline\" [attr.id]=\"id\" [attr.placeholder]=\"placeholder\" class=\"tinymce-selector\"></textarea>\n    <div *ngIf=\"inline\" [attr.id]=\"id\"><ng-content></ng-content></div>\n    <div class=\"loading\" *ngIf=\"load\">\n      <ng-container *ngIf=\"_loading; else _loadingTpl\">{{ _loading }}</ng-container>\n    </div>\n  `, isInline: true, styles: [\"\\n      tinymce .tinymce-selector {\\n        display: none;\\n      }\\n    \"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], TinymceComponent.prototype, \"inline\", void 0);\n__decorate([\n    InputBoolean()\n], TinymceComponent.prototype, \"disabled\", null);\n__decorate([\n    InputNumber()\n], TinymceComponent.prototype, \"delay\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: TinymceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tinymce',\n                    exportAs: 'tinymce',\n                    template: `\n    <textarea *ngIf=\"!inline\" [attr.id]=\"id\" [attr.placeholder]=\"placeholder\" class=\"tinymce-selector\"></textarea>\n    <div *ngIf=\"inline\" [attr.id]=\"id\"><ng-content></ng-content></div>\n    <div class=\"loading\" *ngIf=\"load\">\n      <ng-container *ngIf=\"_loading; else _loadingTpl\">{{ _loading }}</ng-container>\n    </div>\n  `,\n                    styles: [\n                        `\n      tinymce .tinymce-selector {\n        display: none;\n      }\n    `,\n                    ],\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => TinymceComponent),\n                            multi: true,\n                        },\n                    ],\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: TinymceOptions }, { type: i2.NuLazyService }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { config: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], inline: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }] } });\n\nclass NgxTinymceModule {\n    static forRoot(options) {\n        return {\n            ngModule: NgxTinymceModule,\n            providers: [{ provide: TinymceOptions, useValue: options }],\n        };\n    }\n}\nNgxTinymceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxTinymceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxTinymceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxTinymceModule, declarations: [TinymceComponent], imports: [CommonModule], exports: [TinymceComponent] });\nNgxTinymceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxTinymceModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxTinymceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TinymceComponent],\n                    exports: [TinymceComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxTinymceModule, TinymceComponent, TinymceOptions };\n//# sourceMappingURL=ngx-tinymce.js.map\n"]},"metadata":{},"sourceType":"module"}