(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@ng-util/util'), require('@angular/common'), require('@ng-util/lazy')) :
    typeof define === 'function' && define.amd ? define('ngx-tinymce', ['exports', '@angular/core', '@angular/forms', '@ng-util/util', '@angular/common', '@ng-util/lazy'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ngx-tinymce'] = {}, global.ng.core, global.ng.forms, global.util, global.ng.common, global.i2));
}(this, (function (exports, i0, forms, util, i3, i2) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    var TinymceOptions = /** @class */ (function () {
        function TinymceOptions() {
            /** 指定tinymce目录路径，默认：`./assets/tinymce/` */
            this.baseURL = './assets/tinymce/';
            /** 指定tinymce文件名，默认：`tinymce.min.js` */
            this.fileName = 'tinymce.min.js';
        }
        return TinymceOptions;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from) {
        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
            to[j] = from[i];
        return to;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var isSSR = !(typeof document === 'object' && !!document);
    var TinymceComponent = /** @class */ (function () {
        function TinymceComponent(defConfig, lazySrv, ngZone, doc, cd) {
            this.defConfig = defConfig;
            this.lazySrv = lazySrv;
            this.ngZone = ngZone;
            this.doc = doc;
            this.cd = cd;
            this.value = '';
            this.load = true;
            this.id = "_tinymce-" + Math.random().toString(36).substring(2);
            this.placeholder = '';
            this.inline = false;
            this._disabled = false;
            this._loading = null;
            this._loadingTpl = null;
            /** 延迟初始化 */
            this.delay = 0;
            this.ready = new i0.EventEmitter();
        }
        Object.defineProperty(TinymceComponent.prototype, "disabled", {
            set: function (value) {
                this._disabled = value;
                this.setDisabled();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TinymceComponent.prototype, "loading", {
            set: function (value) {
                if (value instanceof i0.TemplateRef) {
                    this._loading = null;
                    this._loadingTpl = value;
                }
                else {
                    this._loading = value;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TinymceComponent.prototype, "instance", {
            get: function () {
                return this._instance;
            },
            enumerable: false,
            configurable: true
        });
        TinymceComponent.prototype._getWin = function () {
            return this.doc.defaultView || window;
        };
        TinymceComponent.prototype.initDelay = function () {
            var _this = this;
            if (isSSR) {
                return;
            }
            setTimeout(function () { return _this.init(); }, Math.min(0, this.delay));
        };
        TinymceComponent.prototype.init = function () {
            var _this = this;
            var win = this._getWin();
            if (!win.tinymce) {
                throw new Error('tinymce js文件加载失败');
            }
            var _a = this, defConfig = _a.defConfig, config = _a.config, id = _a.id, inline = _a.inline;
            if (this._instance) {
                return;
            }
            if (defConfig.baseURL) {
                var url = '' + defConfig.baseURL;
                if (url.endsWith('/')) {
                    url = url.substr(0, url.length - 1);
                }
                win.tinymce.baseURL = url;
            }
            var userOptions = Object.assign(Object.assign({}, defConfig.config), config);
            var options = Object.assign(Object.assign(Object.assign({ selector: "#" + id, inline: inline }, defConfig.config), config), { setup: function (editor) {
                    _this._instance = editor;
                    if (_this.onChange) {
                        editor.on('change keyup', function () {
                            _this.value = editor.getContent();
                            _this.ngZone.run(function () { return _this.onChange(_this.value); });
                        });
                    }
                    if (typeof userOptions.setup === 'function') {
                        userOptions.setup(editor);
                    }
                }, init_instance_callback: function (editor) {
                    if (editor && _this.value) {
                        editor.setContent(_this.value);
                    }
                    _this.setDisabled();
                    if (typeof userOptions.init_instance_callback === 'function') {
                        userOptions.init_instance_callback(editor);
                    }
                    _this.ready.emit(_this._instance);
                } });
            if (userOptions.auto_focus) {
                options.auto_focus = id;
            }
            this.ngZone.runOutsideAngular(function () { return win.tinymce.init(options); });
            this.load = false;
            this.cd.detectChanges();
        };
        TinymceComponent.prototype.destroy = function () {
            var _this = this;
            if (!this._instance) {
                return;
            }
            this.ngZone.runOutsideAngular(function () {
                _this._instance.off();
                _this._instance.remove('#' + _this.id);
            });
            this._instance = null;
        };
        TinymceComponent.prototype.setDisabled = function () {
            var _this = this;
            if (!this._instance) {
                return;
            }
            this.ngZone.runOutsideAngular(function () { return _this._instance.setMode(_this._disabled ? 'readonly' : 'design'); });
        };
        TinymceComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            if (isSSR) {
                return;
            }
            // 已经存在对象无须进入懒加载模式
            if (this._getWin().tinymce) {
                this.initDelay();
                return;
            }
            var defConfig = this.defConfig;
            var baseURL = defConfig && defConfig.baseURL;
            var fileName = defConfig && defConfig.fileName;
            var url = (baseURL || './assets/tinymce/') + (fileName || 'tinymce.min.js');
            this.lazySrv.monitor(url).subscribe(function () { return _this.initDelay(); });
            this.lazySrv.load(url);
        };
        TinymceComponent.prototype.ngOnChanges = function (changes) {
            if (this._instance && changes.config) {
                this.destroy();
                this.initDelay();
            }
        };
        TinymceComponent.prototype.ngOnDestroy = function () {
            this.destroy();
        };
        TinymceComponent.prototype.writeValue = function (value) {
            var _this = this;
            // value should be NOT NULL
            this.value = value || '';
            if (this._instance) {
                this.ngZone.runOutsideAngular(function () { return _this._instance.setContent(_this.value); });
            }
        };
        TinymceComponent.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        TinymceComponent.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
        TinymceComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
            this.setDisabled();
        };
        return TinymceComponent;
    }());
    TinymceComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: TinymceComponent, deps: [{ token: TinymceOptions }, { token: i2__namespace.NuLazyService }, { token: i0__namespace.NgZone }, { token: i3.DOCUMENT }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TinymceComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.2", type: TinymceComponent, selector: "tinymce", inputs: { config: "config", placeholder: "placeholder", inline: "inline", disabled: "disabled", loading: "loading", delay: "delay" }, outputs: { ready: "ready" }, providers: [
            {
                provide: forms.NG_VALUE_ACCESSOR,
                useExisting: i0.forwardRef(function () { return TinymceComponent; }),
                multi: true,
            },
        ], exportAs: ["tinymce"], usesOnChanges: true, ngImport: i0__namespace, template: "\n    <textarea *ngIf=\"!inline\" [attr.id]=\"id\" [attr.placeholder]=\"placeholder\" class=\"tinymce-selector\"></textarea>\n    <div *ngIf=\"inline\" [attr.id]=\"id\"><ng-content></ng-content></div>\n    <div class=\"loading\" *ngIf=\"load\">\n      <ng-container *ngIf=\"_loading; else _loadingTpl\">{{ _loading }}</ng-container>\n    </div>\n  ", isInline: true, styles: ["\n      tinymce .tinymce-selector {\n        display: none;\n      }\n    "], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    __decorate([
        util.InputBoolean()
    ], TinymceComponent.prototype, "inline", void 0);
    __decorate([
        util.InputBoolean()
    ], TinymceComponent.prototype, "disabled", null);
    __decorate([
        util.InputNumber()
    ], TinymceComponent.prototype, "delay", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: TinymceComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tinymce',
                        exportAs: 'tinymce',
                        template: "\n    <textarea *ngIf=\"!inline\" [attr.id]=\"id\" [attr.placeholder]=\"placeholder\" class=\"tinymce-selector\"></textarea>\n    <div *ngIf=\"inline\" [attr.id]=\"id\"><ng-content></ng-content></div>\n    <div class=\"loading\" *ngIf=\"load\">\n      <ng-container *ngIf=\"_loading; else _loadingTpl\">{{ _loading }}</ng-container>\n    </div>\n  ",
                        styles: [
                            "\n      tinymce .tinymce-selector {\n        display: none;\n      }\n    ",
                        ],
                        providers: [
                            {
                                provide: forms.NG_VALUE_ACCESSOR,
                                useExisting: i0.forwardRef(function () { return TinymceComponent; }),
                                multi: true,
                            },
                        ],
                        preserveWhitespaces: false,
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: TinymceOptions }, { type: i2__namespace.NuLazyService }, { type: i0__namespace.NgZone }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i3.DOCUMENT]
                        }] }, { type: i0__namespace.ChangeDetectorRef }];
        }, propDecorators: { config: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], inline: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], loading: [{
                    type: i0.Input
                }], delay: [{
                    type: i0.Input
                }], ready: [{
                    type: i0.Output
                }] } });

    var NgxTinymceModule = /** @class */ (function () {
        function NgxTinymceModule() {
        }
        NgxTinymceModule.forRoot = function (options) {
            return {
                ngModule: NgxTinymceModule,
                providers: [{ provide: TinymceOptions, useValue: options }],
            };
        };
        return NgxTinymceModule;
    }());
    NgxTinymceModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxTinymceModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    NgxTinymceModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxTinymceModule, declarations: [TinymceComponent], imports: [i3.CommonModule], exports: [TinymceComponent] });
    NgxTinymceModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxTinymceModule, imports: [[i3.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxTinymceModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule],
                        declarations: [TinymceComponent],
                        exports: [TinymceComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NgxTinymceModule = NgxTinymceModule;
    exports.TinymceComponent = TinymceComponent;
    exports.TinymceOptions = TinymceOptions;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tinymce.umd.js.map
