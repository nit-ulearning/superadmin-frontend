{"version":3,"sources":["../../../../../packages/util/convert/prop.ts"],"names":["propDecoratorFactory","name","fallback","defaultValue","target","propName","originalDescriptor","privatePropName","Object","prototype","hasOwnProperty","call","console","warn","defineProperty","configurable","writable","get","bind","this","set","value","toBoolean","allowUndefined","undefined","toNumber","fallbackValue","isNaN","parseFloat","Number"],"mappings":"+VAAA,SAASA,EACPC,EACAC,EACAC,GA2BA,OAzBA,SAAuBC,EAAaC,EAAkBC,OAC9CC,EAAkB,OAAOF,EAW/B,OATIG,OAAOC,UAAUC,eAAeC,KAAKP,EAAQG,IAC/CK,QAAQC,KAAK,aAAaN,EAAe,+CAA+CN,EAAI,eAG9FO,OAAOM,eAAeV,EAAQG,EAAiB,CAC7CQ,cAAc,EACdC,UAAU,IAGL,CACLC,IAAG,WACD,OAAOX,GAAsBA,EAAmBW,IAAMX,EAAmBW,IAAIC,KAAKC,KAA5Bb,GAAsCa,KAAKZ,IAEnGa,IAAG,SAACC,GACEf,GAAsBA,EAAmBc,KAC3Cd,EAAmBc,IAAIF,KAAKC,KAA5Bb,CAAkCJ,EAASmB,EAAOlB,IAEpDgB,KAAKZ,GAAmBL,EAASmB,EAAOlB,eAQhCmB,EAAUD,EAAYE,GACpC,YADoC,IAAAA,IAAAA,GAAA,GAC7BA,QAAmC,IAAVF,OAAwBG,EAAqB,MAATH,GAAiB,GAAGA,GAAY,iBAiBtFI,EAASJ,EAAYK,GACnC,YADmC,IAAAA,IAAAA,EAAA,GAC3BC,MAAMC,WAAU,KAAoBD,MAAME,OAAOR,IAA0BK,EAAhBG,OAAOR,2BAP/ClB,GAC3B,YAD2B,IAAAA,IAAAA,GAAA,GACpBH,EAAqB,cAAesB,EAAWnB,2BAiB5BA,GAC1B,YAD0B,IAAAA,IAAAA,EAAA,GACnBH,EAAqB,cAAeyB,EAAUtB","sourcesContent":["function propDecoratorFactory<T, D>(\n  name: string,\n  fallback: (v: T, defaultValue: D) => D,\n  defaultValue: any,\n): (target: any, propName: string) => void {\n  function propDecorator(target: any, propName: string, originalDescriptor?: TypedPropertyDescriptor<any>): any {\n    const privatePropName = `$$__${propName}`;\n\n    if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n      console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\n    }\n\n    Object.defineProperty(target, privatePropName, {\n      configurable: true,\n      writable: true,\n    });\n\n    return {\n      get(): string {\n        return originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n      },\n      set(value: T): void {\n        if (originalDescriptor && originalDescriptor.set) {\n          originalDescriptor.set.bind(this)(fallback(value, defaultValue));\n        }\n        this[privatePropName] = fallback(value, defaultValue);\n      },\n    };\n  }\n\n  return propDecorator;\n}\n\nexport function toBoolean(value: any, allowUndefined: boolean | null = false): boolean | undefined {\n  return allowUndefined && typeof value === 'undefined' ? undefined : value != null && `${value}` !== 'false';\n}\n\n/**\n * Input decorator that handle a prop to do get/set automatically with toBoolean\n *\n * ```ts\n * @Input() InputBoolean() visible: boolean = false;\n * @Input() @InputBoolean(null) visible: boolean = false;\n * ```\n */\nexport function InputBoolean(defaultValue: boolean | null = false): any {\n  return propDecoratorFactory('InputNumber', toBoolean, defaultValue);\n}\n\nexport function toNumber(value: any): number;\nexport function toNumber<D>(value: any, fallback: D): number | D;\nexport function toNumber(value: any, fallbackValue: number = 0): number {\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\n}\n\n/**\n * Input decorator that handle a prop to do get/set automatically with toNumber\n *\n * ```ts\n * @Input() @InputNumber() visible: number = 1;\n * @Input() @InputNumber(null) visible: number = 2;\n * ```\n */\nexport function InputNumber(defaultValue: number | null = 0): any {\n  return propDecoratorFactory('InputNumber', toNumber, defaultValue);\n}\n"]}