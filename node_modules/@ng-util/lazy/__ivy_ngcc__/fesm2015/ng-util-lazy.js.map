{"version":3,"file":"ng-util-lazy.js","sources":["../../../../../packages/lazy/lazy.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, pipe } from 'rxjs';\nimport { filter, share } from 'rxjs/operators';\n\nexport type NuLazyResourcesType = 'script' | 'style';\n\nexport interface NuLazyResources {\n  path: string;\n  type: NuLazyResourcesType;\n  /**\n   * 回调名称\n   */\n  callback?: string;\n}\n\nexport interface NuLazyResult {\n  path: string;\n  status: 'ok' | 'error' | 'loading';\n  type?: NuLazyResourcesType;\n  error?: {};\n}\n\n@Injectable({ providedIn: 'root' })\nexport class NuLazyService {\n  private list: { [key: string]: boolean } = {};\n  private cached: { [key: string]: NuLazyResult } = {};\n  private _notify: BehaviorSubject<NuLazyResult[]> = new BehaviorSubject<NuLazyResult[]>([]);\n\n  constructor(@Inject(DOCUMENT) private doc: any) {}\n\n  private fixPaths(paths?: string | Array<string | NuLazyResources>): NuLazyResources[] {\n    paths = paths || [];\n    if (!Array.isArray(paths)) {\n      paths = [paths];\n    }\n    return paths.map((p: string | NuLazyResources) => {\n      const res = (typeof p === 'string' ? { path: p } : p) as NuLazyResources;\n      if (!res.type) {\n        res.type = res.path.endsWith('.js') || res.callback ? 'script' : 'style';\n      }\n      return res;\n    });\n  }\n\n  /**\n   * Monitor for the finished of `paths`\n   *\n   * - It's recommended to pass the value in accordance with the `load()` method\n   */\n  monitor(paths?: string | Array<string | NuLazyResources>): Observable<NuLazyResult[]> {\n    const libs = this.fixPaths(paths);\n\n    const pipes = [share(), filter((ls: NuLazyResult[]) => ls.length !== 0)];\n\n    if (libs.length > 0) {\n      pipes.push(\n        filter(\n          (ls: NuLazyResult[]) => ls.length === libs.length && ls.every(v => v.status === 'ok' && libs.find(lw => lw.path === v.path)),\n        ),\n      );\n    }\n\n    return this._notify.asObservable().pipe(pipe.apply(this, pipes));\n  }\n\n  clear(): void {\n    this.list = {};\n    this.cached = {};\n  }\n\n  /**\n   * Load the specified resources, includes `.js`, `.css`\n   *\n   * - The returned Promise does not mean that it was successfully loaded\n   * - You can monitor load is success via `monitor()`\n   */\n  async load(paths: string | Array<string | NuLazyResources>): Promise<NuLazyResult[]> {\n    paths = this.fixPaths(paths);\n\n    return Promise.all(\n      (paths as NuLazyResources[]).map(p =>\n        p.type === 'script' ? this.loadScript(p.path, { callback: p.callback }) : this.loadStyle(p.path),\n      ),\n    ).then(res => {\n      this._notify.next(res);\n      return Promise.resolve(res);\n    });\n  }\n\n  loadScript(path: string, options?: { innerContent?: string; callback?: string }): Promise<NuLazyResult> {\n    const { innerContent } = { ...options };\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve({ ...this.cached[path], status: 'loading' });\n        return;\n      }\n\n      this.list[path] = true;\n      const onSuccess = (item: NuLazyResult) => {\n        if (item.status === 'ok' && options?.callback) {\n          (window as any)[options?.callback] = () => {\n            onSuccessTruth(item);\n          };\n        } else {\n          onSuccessTruth(item);\n        }\n      };\n      const onSuccessTruth = (item: NuLazyResult) => {\n        item.type = 'script';\n        this.cached[path] = item;\n        resolve(item);\n        this._notify.next([item]);\n      };\n\n      const node = this.doc.createElement('script') as any;\n      node.type = 'text/javascript';\n      node.src = path;\n      node.charset = 'utf-8';\n      if (innerContent) {\n        node.innerHTML = innerContent;\n      }\n      if (node.readyState) {\n        // IE\n        node.onreadystatechange = () => {\n          if (node.readyState === 'loaded' || node.readyState === 'complete') {\n            node.onreadystatechange = null;\n            onSuccess({\n              path,\n              status: 'ok',\n            });\n          }\n        };\n      } else {\n        node.onload = () =>\n          onSuccess({\n            path,\n            status: 'ok',\n          });\n      }\n      node.onerror = (error: {}) =>\n        onSuccess({\n          path,\n          status: 'error',\n          error,\n        });\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n    });\n  }\n\n  loadStyle(path: string, options?: { rel?: string; innerContent?: string }): Promise<NuLazyResult> {\n    const { rel, innerContent } = { rel: 'stylesheet', ...options };\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve(this.cached[path]);\n        return;\n      }\n\n      this.list[path] = true;\n\n      const node = this.doc.createElement('link') as HTMLLinkElement;\n      node.rel = rel;\n      node.type = 'text/css';\n      node.href = path;\n      if (innerContent) {\n        node.innerHTML = innerContent;\n      }\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n      const item: NuLazyResult = {\n        path,\n        status: 'ok',\n        type: 'style',\n      };\n      this.cached[path] = item;\n      resolve(item);\n    });\n  }\n}\n"]}