{"version":3,"sources":["webpack:///src/app/pages/notification/add-email-notification/add-email-notification-routing.module.ts","webpack:///src/app/pages/notification/add-email-notification/add-email-notification.module.ts","webpack:///src/app/pages/notification/add-email-notification/add-email-notification.page.ts","webpack:///src/app/pages/notification/add-email-notification/add-email-notification.page.scss","webpack:///src/app/pages/notification/add-email-notification/add-email-notification.page.html"],"names":["routes","path","component","AddEmailNotificationPage","AddEmailNotificationPageRoutingModule","NgModule","imports","RouterModule","exports","AddEmailNotificationPageModule","CommonModule","FormsModule","IonicModule","SharedModule","declarations","toastController","modalController","http","commonUtils","router","activatedRoute","model","editLoading","formLoading","cities","id","name","avatar","Templates","setDefaults","commonFunction","console","log","templatefor_get","get","getTemplateFor_api","subscribe","res","etAction","length","errRes","value","getPathNameFun","url","split","x","parms_action_name","snapshot","paramMap","parms_action_id","getTemplatefor","editApi","init","editForm_api","form_api","editDataSubscribe","i","etTags","selectdTag","return_data","etName","etSubject","isPrimary","etBody","etType","allEditData","actionHeaderText","form","formValue","fd","FormData","val","undefined","append","valid","formSubmitSubscribe","put","response","status","presentToast","message","navigateByUrl","reset","post","create","duration","cssClass","toast","present","_identifier","_item","_items","ModalPage","componentProps","identifier","modalForm_item","modalForm_array","changePassword_modal","onDidDismiss","then","getdata","data","_data","unsubscribe","ToastController","ModalController","HttpClient","CommonUtils","Router","ActivatedRoute","Component","selector","template"],"mappings":"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","file":"src_app_pages_notification_add-email-notification_add-email-notification_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddEmailNotificationPage } from './add-email-notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddEmailNotificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddEmailNotificationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddEmailNotificationPageRoutingModule } from './add-email-notification-routing.module';\n\nimport { AddEmailNotificationPage } from './add-email-notification.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule, //Share module import\n    AddEmailNotificationPageRoutingModule\n  ],\n  declarations: [AddEmailNotificationPage]\n})\nexport class AddEmailNotificationPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController, ToastController } from '@ionic/angular';\nimport { ModalPage } from '../../modal/modal.page';\nimport { CommonUtils } from 'src/app/services/common-utils/common-utils';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-add-email-notification',\n  templateUrl: './add-email-notification.page.html',\n  styleUrls: ['./add-email-notification.page.scss'],\n})\nexport class AddEmailNotificationPage implements OnInit {\n  model: any = {};\n   parms_action_name;\n  parms_action_id;\n  editApi;\n  editForm_api;\n  form_api;\n  actionHeaderText;\n  editLoading = false;\n  allEditData;\n  formLoading = false;\n  alladdTemplateData:any;\n  getTemplateFor_api;\n  selectdTag;\n  private formSubmitSubscribe: Subscription;\n  private editDataSubscribe: Subscription;\n  private templatefor_get:Subscription;\n  cities = [\n    {\n      id: 1,  name: 'Vilnius',  avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x'\n    },\n    { \n      id: 2, name: 'Kaunas', avatar: '//www.gravatar.com/avatar/ddac2aa63ce82315b513be9dc93336e5?d=retro&r=g&s=15' },\n    {\n      id: 3, name: 'Pavilnys', avatar: '//www.gravatar.com/avatar/6acb7abf486516ab7fb0a6efa372042b?d=retro&r=g&s=15'\n    },\n    {\n      id: 4,  name: 'Siauliai', avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x'\n    },\n  ];\n  Templates = [];\n  setDefaults=[\n    {id: 0, name: 'Not Default'},\n    {id: 1, name: 'Default'}\n  ];\n  // selectedCity = this.cities[0].name;\n  // selectedType = this.setDefaults[1].name;\n  // selectedTemplate = this.Templates[1].name;\n  constructor(\n    public toastController: ToastController,\n    private modalController : ModalController,\n    private http : HttpClient,\n    private commonUtils: CommonUtils, // common functionlity come here\n     private router: Router,\n    private activatedRoute : ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.commonFunction();\n  }\n  // getTemplatefor start\n  getTemplatefor(){\n    console.log(\"HHH\");\n    this.templatefor_get = this.http.get(this.getTemplateFor_api).subscribe(\n        (res:any) => {\n          console.log(\"Get template for  >\", res[0].etAction); \n          console.log(\"Get template for length\",res.length);\n          this.Templates = res; \n          console.log(\"Get template for length\",this.Templates);\n\n        },\n        errRes => {\n           console.log(\"Get template for  >\", errRes);  \n        }\n      );\n    \n  }\n  // getTemplatefor end\n  ngsel(value)\n  {\n    console.log(\"select\",value);\n  }\n  // commonFunction start \n  commonFunction(){\n    // get active url name\n    this.commonUtils.getPathNameFun(this.router.url.split('/')[1]);\n    let x = this.commonUtils.getPathNameFun(this.router.url.split('/')[1])\n    console.log(this.router.url);\n    this.parms_action_name = this.activatedRoute.snapshot.paramMap.get('action');\n    this.parms_action_id = this.activatedRoute.snapshot.paramMap.get('id');\n    console.log('parms_action_name', this.parms_action_name);\n    console.log('parms_action_id', this.parms_action_id);\n\n    this.getTemplateFor_api = 'emailTemplate/getAll/template_for';\n    this.getTemplatefor();\n\n    // edit api\n    if(this.parms_action_name == 'edit'){\n      this.editApi = 'emailTemplate/viewTemplate/'+this.parms_action_id;\n\n      // init call\n      this.init();\n\n      this.editForm_api = 'emailTemplate/update/'+this.parms_action_id;\n    }\n\n    // form_api Api\n    this.form_api = 'emailTemplate/add';\n  }\n  // commonFunction end\n  // ---------- init start ----------\n  init(){\n    if( this.parms_action_name == 'edit'){\n      \n\n      this.editLoading = true;\n      //edit data call\n      this.editDataSubscribe = this.http.get(this.editApi).subscribe(\n        (res:any) => {\n          // console.log(\"Match >\", res.etAction); \n          for(let i=0;i<this.Templates.length;i++)\n          {\n             if(res.etAction == this.Templates[i].etAction)\n             {\n                console.log(\"Match >\", res.etAction);   \n                console.log(\"Templates >\", this.Templates[i].etTags);\n                this.selectdTag=this.Templates[i].etTags;\n             } \n          }\n          this.editLoading = false;\n          \n          console.log(\"Edit data  res >\", res.return_data);\n          this.model = {\n            etAction : res.etAction,\n            etName : res.etName,\n            etSubject : res.etSubject,\n            isPrimary : res.isPrimary,\n            etBody:res.etBody,\n            etType: res.etType\n          }; \n\n          \n          \n\n          // edit data\n          this.allEditData = res;\n          console.log('this.allEditData', this.allEditData);\n          \n        },\n        errRes => {\n          // this.selectLoadingDepend = false;\n          this.editLoading = false;\n        }\n      );\n\n    }else{\n      this.actionHeaderText = 'Add';\n    }\n  }\n  // ---------- init end ----------\n  // --------on submit start----------\n  onSubmitForm(form:NgForm)\n  {\n    this.formLoading = true;\n    let formValue = form.value;\n    console.log(form.value);\n    // / get form value\n    let fd = new FormData();\n    for (let val in form.value) {\n      if(form.value[val] == undefined){\n        form.value[val] = '';\n      }\n      fd.append(val, form.value[val]);\n    };\n\n    console.log('value >', fd);\n    if(!form.valid){\n      return;\n    }\n    if(this.parms_action_name == 'edit'){\n      this.formSubmitSubscribe = this.http.put(this.editForm_api, form.value).subscribe(\n        (response:any) => {\n          this.formLoading = false;\n          console.log(\"add form response >\", response);\n  \n          if(response.status == 200){\n            this.commonUtils.presentToast('success', response.message);\n            this.router.navigateByUrl('/email-notification-list');\n            console.log(\"response\",response)\n            form.reset();\n          }else {\n            this.commonUtils.presentToast('error', response.message);\n            console.log(\"response\",response)\n          }\n          console.log(\"response\",response)\n        },\n        errRes => {\n          this.formLoading = false;\n          console.log(\"errResbb\",errRes);\n        }\n      );\n    }\n    else if(this.parms_action_name == 'add'){\n      this.formSubmitSubscribe = this.http.post(this.form_api, form.value).subscribe(\n        (response:any) => {\n          this.formLoading = false;\n          console.log(\"add form response >\", response);\n  \n          if(response.status == 200){\n            this.commonUtils.presentToast('success', response.message);\n            this.router.navigateByUrl('/email-notification-list');\n            form.reset();\n          }else {\n            this.commonUtils.presentToast('error', response.message);\n          }\n        },\n        errRes => {\n          this.formLoading = false;\n        }\n      );\n    }\n  }\n  // on submit end\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'Your data have been saved.',\n      duration: 2000,\n      cssClass:\"my-tost-custom-classsuccess\",\n    });\n    toast.present();\n  }\n  // AddTemplate start\n  async AddTemplate(_identifier, _item, _items) {\n    // console.log('_identifier >>', _identifier);\n    let changePassword_modal;\n    changePassword_modal = await this.modalController.create({\n      component: ModalPage,\n      cssClass: 'mymodalClass small',\n      componentProps: { \n        identifier: _identifier,\n        modalForm_item: _item,\n        modalForm_array: _items\n      }\n    });\n    \n    // modal data back to Component\n    changePassword_modal.onDidDismiss()\n    .then((getdata) => {\n      console.log('getdata >>>>>>>>>>>', getdata);\n      // this.presentToast('Package End', 'success');\n      if(getdata.data == 'submitClose'){\n        /* this.onListData(this.listing_url, this.displayRecord, this.pageNo, this.api_parms, this.searchTerm, this.cherecterSearchTerm, this.sortColumnName, this.sortOrderName, this.advanceSearchParms, this.urlIdentifire);  */\n      }\n\n    });\n\n    return await changePassword_modal.present();\n  }\n  // AddTemplate end\n\n  selectTemplates(_data){\n    console.log('_data>>', _data);\n    this.selectdTag = _data;\n    // this.Templates\n    console.log(\"this.Templates \",this.Templates ); \n  }\n\n  // ----------- destroy subscription start ---------\n  ngOnDestroy() {\n    if(this.formSubmitSubscribe !== undefined){\n      this.formSubmitSubscribe.unsubscribe();\n    }\n    if(this.editDataSubscribe !== undefined ){\n      this.editDataSubscribe.unsubscribe();\n    }\n  }\n  // destroy subscription end\n}","export default \".btn-md {\\n  padding: 0.53rem 1.3rem !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1lbWFpbC1ub3RpZmljYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0NBQUE7QUFDSiIsImZpbGUiOiJhZGQtZW1haWwtbm90aWZpY2F0aW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4tbWQge1xuICAgIHBhZGRpbmc6IC41M3JlbSAxLjNyZW0gIWltcG9ydGFudDtcbn0iXX0= */\";","export default \"<!-- common header show -->\\n<common-header></common-header>\\n\\n<ion-content>\\n  <div class=\\\"page-body\\\">\\n    <div class=\\\"page-wrapper\\\">\\n      <div class=\\\"form-layout\\\">\\n        <div class=\\\"card-outer\\\">\\n          <div class=\\\"card card-box\\\">\\n            <form #addEmailnoticForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitForm(addEmailnoticForm)\\\" >\\n              <div class=\\\"card-header\\\">\\n                  <div class=\\\"card-header-tittle\\\">\\n                    Email Template {{parms_action_name}}\\n                  </div>\\n                  <div class=\\\"card-header-action\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"form-wrapper\\\">\\n                  <ion-grid>\\n                    <ion-row>\\n                      <!-- Template For -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item ngsel\\\">\\n                        <!--<ion-badge class=\\\"pillBtn\\\" color=\\\"primary\\\" (click)=\\\"AddTemplate('AddTemplate_modal', get_user_dtls, '');\\\">\\n                            <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n                            Add\\n                          </ion-badge>\\n                          <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Template For </mat-label>\\n                            <mat-select [(value)]=\\\"selectedTemplate\\\" [(ngModel)]=\\\"model.etAction\\\" name=\\\"etAction\\\" required>\\n                              <mat-option (click)=\\\"selectTemplates(template.etTags)\\\" [value]=\\\"template.etAction\\\" *ngFor=\\\"let template of Templates\\\">{{ template.etAction }}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field> -->\\n                          \\n                          <ng-select [ngClass]=\\\"{'readOnly': model?.etType == 'DEFAULT'}\\\" [items]=\\\"Templates\\\" \\n                                   bindLabel=\\\"etAction\\\" \\n                                   name=\\\"etAction\\\"\\n                                   bindValue=\\\"etAction\\\" \\n                                   [(ngModel)]=\\\"model.etAction\\\"\\n                                   (change)=\\\"selectTemplates(Templates.etTags)\\\">\\n                          </ng-select>\\n                          <label>Template For</label>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Template name -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" [ngClass]=\\\"{'readOnly': model?.etType == 'DEFAULT'}\\\">\\n                            <mat-label>Template Name </mat-label>\\n                            <input matInput placeholder=\\\"Template Name\\\" name=\\\"etName\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.etName\\\" required>\\n                          </mat-form-field>\\n                        </div>\\n                      </ion-col>\\n                       <!-- Subject -->\\n                       <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item\\\">\\n                          <mat-form-field appearance=\\\"outline\\\" [ngClass]=\\\"{'readOnly': model?.etType == 'DEFAULT'}\\\">\\n                            <mat-label>Subject </mat-label>\\n                            <input matInput placeholder=\\\"Subject\\\" name=\\\"etSubject\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.etSubject\\\" required>\\n                          </mat-form-field>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Set Default -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item ngsel\\\">\\n                          \\n                          <ng-select [items]=\\\"setDefaults\\\" \\n                                   bindLabel=\\\"name\\\" \\n                                   name=\\\"isPrimary\\\"\\n                                   placeholder=\\\"Select Set Default\\\"\\n                                   bindValue=\\\"id\\\" \\n                                   [(ngModel)]=\\\"model.isPrimary\\\"\\n                                   (change)=\\\"ngsel(model.isPrimary)\\\"\\n                                   required>\\n                          </ng-select>\\n                          <label>Set Default</label>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Useable tag -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\"  size-lg=\\\"12\\\" *ngIf=\\\"selectdTag\\\">\\n                        <div class=\\\"card-outer\\\">\\n                          <div class=\\\"card card-box\\\">\\n                            <div class=\\\"card-header\\\">\\n                              <div class=\\\"card-header-tittle\\\">\\n                                Useable tags for template body:\\n                              </div>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                              {{selectdTag}}\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Template Description -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\"  size-lg=\\\"12\\\">\\n                        <div class=\\\"form-item\\\">\\n                          <ion-label>Template Body </ion-label>\\n                          <div class=\\\"text-editor\\\">\\n                            <tinymce [ngClass]=\\\"{'readOnly': model?.etType == 'DEFAULT'}\\\" #msgText (click)=\\\"getCursorPosition(msgText, model.etBody)\\\" (keyup)=\\\"getCursorPosition(msgText, model.etBody)\\\" name=\\\"etBody\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.etBody\\\" required></tinymce>\\n                          </div>\\n                        </div>\\n                      </ion-col>\\n                    </ion-row>\\n                  </ion-grid>\\n                </div>\\n              </div>\\n              <div class=\\\"card-footer\\\">\\n                  <div>\\n                      <button class=\\\"border-btn danger btn-md\\\" type=\\\"reset\\\" [routerLink]=\\\"['/', 'email-notification-list']\\\" style=\\\"margin-right: 10px;\\\" mat-stroked-button>Cancel</button>\\n                      <button class=\\\"fill-btn btn-md\\\" mat-stroked-button type=\\\"submit\\\" [disabled]=\\\"!addEmailnoticForm.valid || formLoading\\\">\\n                        <ion-spinner *ngIf=\\\"formLoading\\\" name=\\\"crescent\\\"></ion-spinner>\\n                        Save\\n                      </button>\\n                  </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\\n\\n<!-- common footer show -->\\n<common-footer></common-footer>\";"]}