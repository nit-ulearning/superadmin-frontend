{"version":3,"sources":["webpack:///src/app/pages/notification/add-sms-notification/add-sms-notification-routing.module.ts","webpack:///src/app/pages/notification/add-sms-notification/add-sms-notification.module.ts","webpack:///src/app/pages/notification/add-sms-notification/add-sms-notification.page.ts","webpack:///src/app/pages/notification/add-sms-notification/add-sms-notification.page.scss","webpack:///src/app/pages/notification/add-sms-notification/add-sms-notification.page.html"],"names":["routes","path","component","AddSmsNotificationPage","AddSmsNotificationPageRoutingModule","NgModule","imports","RouterModule","exports","AddSmsNotificationPageModule","CommonModule","FormsModule","IonicModule","SharedModule","declarations","toastController","modalController","http","commonUtils","router","activatedRoute","model","editLoading","formLoading","cities","id","name","avatar","headerIds","setDefaults","selectFieldVariable","selectedCity","selectedHeader","selectedType","commonFunction","console","log","templateforSMS_get","get","getTemplateForSMS_api","subscribe","res","etAction","length","templates","errRes","getPathNameFun","url","split","x","parms_action_name","snapshot","paramMap","parms_action_id","editApi","init","editForm_api","form_api","editDataSubscribe","stAction","i","stName","selectdTag","stTags","return_data","stTempId","setDefault","isPrimary","stSubject","stBody","allEditData","actionHeaderText","form","formValue","value","fd","FormData","val","undefined","append","valid","formSubmitSubscribe","put","response","status","presentToast","message","navigateByUrl","reset","post","_identifier","_item","_items","create","ModalPage","cssClass","componentProps","identifier","modalForm_item","modalForm_array","changePassword_modal","onDidDismiss","then","getdata","data","present","_data","duration","toast","_value","postionBeforeValue","postionAfterValue","oField","selectionStart","slice","unsubscribe","ToastController","ModalController","HttpClient","CommonUtils","Router","ActivatedRoute","Component","selector","template"],"mappings":"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","file":"src_app_pages_notification_add-sms-notification_add-sms-notification_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddSmsNotificationPage } from './add-sms-notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddSmsNotificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddSmsNotificationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddSmsNotificationPageRoutingModule } from './add-sms-notification-routing.module';\n\nimport { AddSmsNotificationPage } from './add-sms-notification.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule, //Share module import\n    AddSmsNotificationPageRoutingModule\n  ],\n  declarations: [AddSmsNotificationPage]\n})\nexport class AddSmsNotificationPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController, ToastController } from '@ionic/angular';\nimport { ModalPage } from '../../modal/modal.page';\nimport { CommonUtils } from 'src/app/services/common-utils/common-utils';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-add-sms-notification',\n  templateUrl: './add-sms-notification.page.html',\n  styleUrls: ['./add-sms-notification.page.scss'],\n})\nexport class AddSmsNotificationPage implements OnInit {\n  model: any = {};\n  parms_action_name;\n  parms_action_id;\n  editApi;\n  editForm_api;\n  form_api;\n  actionHeaderText;\n  editLoading = false;\n  allEditData;\n  formLoading = false;\n  templates;\n  selectdTag;\n  getTemplateForSMS_api;\n  private formSubmitSubscribe: Subscription;\n  private editDataSubscribe: Subscription;\n  private templateforSMS_get :Subscription;\n  cities = [\n    {\n        id: 1,\n        name: 'Vilnius',\n        avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x'\n    },\n    { id: 2, name: 'Kaunas', avatar: '//www.gravatar.com/avatar/ddac2aa63ce82315b513be9dc93336e5?d=retro&r=g&s=15' },\n    {\n        id: 3,\n        name: 'Pavilnys',\n        avatar: '//www.gravatar.com/avatar/6acb7abf486516ab7fb0a6efa372042b?d=retro&r=g&s=15'\n    },\n    {\n        id: 4,\n        name: 'Siauliai',\n        avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x'\n    },\n  ];\n  headerIds = [\n    {id: 1, name: 'DLT ID'},\n  ];\n  setDefaults = [\n    {id: 0, name: 'Not Default'},\n    {id: 1, name: 'Default'},\n  ];\n  selectFieldVariable = [\n    {id: '##Number##', name: 'Number'},\n    {id: '##Name##', name: 'Name'},\n    {id: '##Class##', name: 'Class'},\n    {id: '##Roll##', name: 'Roll'},\n  ];\n  \n  selectedCity = this.cities[0].name;\n  selectedHeader = this.headerIds[0].name;\n  selectedType = this.setDefaults[0].name;\n  constructor(\n    public toastController: ToastController,\n    private modalController : ModalController,\n    private http : HttpClient,\n    private commonUtils: CommonUtils, // common functionlity come here\n     private router: Router,\n    private activatedRoute : ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.commonFunction();\n  }\n  // getTemplatefor start\n  getTemplatefor(){\n    console.log(\"HHH\");\n    this.templateforSMS_get = this.http.get(this.getTemplateForSMS_api).subscribe(\n        (res:any) => {\n          console.log(\"Get template for  >\", res[0].etAction); \n          console.log(\"Get template for length\",res.length);\n          this.templates = res; \n          console.log(\"Get template for length\",this.templates);\n\n        },\n        errRes => {\n           console.log(\"Get template for  >\", errRes);  \n        }\n      );\n    \n  }\n  // getTemplatefor end\n  // commonFunction start \n  commonFunction(){\n    // get active url name\n    this.commonUtils.getPathNameFun(this.router.url.split('/')[1]);\n    let x = this.commonUtils.getPathNameFun(this.router.url.split('/')[1])\n    console.log(this.router.url);\n    this.parms_action_name = this.activatedRoute.snapshot.paramMap.get('action');\n    this.parms_action_id = this.activatedRoute.snapshot.paramMap.get('id');\n\n    console.log('parms_action_name', this.parms_action_name);\n    console.log('parms_action_id', this.parms_action_id);\n     this.getTemplateForSMS_api = 'smsTemplate/smsFor/list';\n    // this.getTemplatefor();\n    // edit api\n    if(this.parms_action_name == 'edit'){\n      this.editApi = 'smsTemplate/list/'+this.parms_action_id;\n\n      // init call\n      this.init();\n\n      this.editForm_api = 'smsTemplate/update/'+this.parms_action_id;\n    }\n\n    // form_api Api\n    this.form_api = 'smsTemplate/add';\n  }\n  // commonFunction end\n  // ---------- init start ----------\n  init(){\n    if( this.parms_action_name == 'edit'){\n      \n\n      this.editLoading = true;\n\n      //edit data call\n      this.editDataSubscribe = this.http.get(this.editApi).subscribe(\n        (res:any) => {\n          console.log(\"stAction >\", res.stAction,this.templates);   \n          for(let i=0;i<this.templates.length;i++)\n          {\n             if(res.stAction == this.templates[i].stName)\n             {\n                console.log(\"Match >\", res.stAction,\"Templates >\", this.templates[i].stName);\n                this.selectdTag=this.templates[i].stTags;\n             } \n          }\n          this.editLoading = false;\n          console.log(\"Edit data  res >\", res.return_data);\n          this.model = {\n            stAction : res.stAction,\n            stName : res.stName,\n            stTempId : res.stTempId,\n            setDefault : res.setDefault,\n            isPrimary:res.isPrimary,\n            stSubject:res.stSubject,\n            stBody:res.stBody\n          }; \n          \n          \n          \n\n          // edit data\n          this.allEditData = res;\n          console.log('this.allEditData', this.allEditData);\n          \n        },\n        errRes => {\n          // this.selectLoadingDepend = false;\n          this.editLoading = false;\n        }\n      );\n\n    }else{\n      this.actionHeaderText = 'Add';\n    }\n  }\n  // ---------- init end ----------\n\n  // --------on submit start----------\n  onSubmitForm(form:NgForm)\n  {\n    this.formLoading = true;\n    let formValue = form.value;\n    console.log(form.value);\n    // / get form value\n    let fd = new FormData();\n    for (let val in form.value) {\n      if(form.value[val] == undefined){\n        form.value[val] = '';\n      }\n      fd.append(val, form.value[val]);\n    };\n\n    console.log('value >', fd);\n    if(!form.valid){\n      return;\n    }\n    if(this.parms_action_name == 'edit'){\n      this.formSubmitSubscribe = this.http.put(this.editForm_api, form.value).subscribe(\n        (response:any) => {\n          this.formLoading = false;\n          console.log(\"add form response >\", response);\n  \n          if(response.status == 200){\n            this.commonUtils.presentToast('success', response.message);\n            this.router.navigateByUrl('/sms-notification-list');\n            form.reset();\n          }else {\n            this.commonUtils.presentToast('error', response.message);\n          }\n        },\n        errRes => {\n          this.formLoading = false;\n          console.log(\"errRes\",errRes)\n        }\n      );\n    }\n    else if(this.parms_action_name == 'add'){\n      this.formSubmitSubscribe = this.http.post(this.form_api, form.value).subscribe(\n        (response:any) => {\n          this.formLoading = false;\n          console.log(\"add form response >\", response);\n  \n          if(response.status == 200){\n            this.commonUtils.presentToast('success', response.message);\n            this.router.navigateByUrl('/sms-notification-list');\n            form.reset();\n          }else {\n            this.commonUtils.presentToast('error', response.message);\n          }\n        },\n        errRes => {\n          this.formLoading = false;\n        }\n      );\n    }\n  }\n  // on submit end\n\n  // AddTemplate start\n  async AddSmsTemplate(_identifier, _item, _items) {\n    // console.log('_identifier >>', _identifier);\n    let changePassword_modal;\n    changePassword_modal = await this.modalController.create({\n      component: ModalPage,\n      cssClass: 'mymodalClass small',\n      componentProps: { \n        identifier: _identifier,\n        modalForm_item: _item,\n        modalForm_array: _items\n      }\n    });\n    \n    // modal data back to Component\n    changePassword_modal.onDidDismiss()\n    .then((getdata) => {\n      console.log('getdata >>>>>>>>>>>', getdata);\n      // this.presentToast('Package End', 'success');\n      if(getdata.data == 'submitClose'){\n        /* this.onListData(this.listing_url, this.displayRecord, this.pageNo, this.api_parms, this.searchTerm, this.cherecterSearchTerm, this.sortColumnName, this.sortOrderName, this.advanceSearchParms, this.urlIdentifire);  */\n      }\n\n    });\n\n    return await changePassword_modal.present();\n  }\n  // AddTemplate end\n  // choseHeader start\n  async choseHeader(_identifier, _item, _items) {\n    console.log('_identifier >>', _identifier);\n    let changePassword_modal;\n    changePassword_modal = await this.modalController.create({\n      component: ModalPage,\n      cssClass: 'mymodalClass small',\n      componentProps: { \n        identifier: _identifier,\n        modalForm_item: _item,\n        modalForm_array: _items\n      }\n    });\n    \n    // modal data back to Component\n    changePassword_modal.onDidDismiss()\n    .then((getdata) => {\n      console.log('getdata >>>>>>>>>>>', getdata);\n      // this.presentToast('Package End', 'success');\n      if(getdata.data == 'submitClose'){\n        /* this.onListData(this.listing_url, this.displayRecord, this.pageNo, this.api_parms, this.searchTerm, this.cherecterSearchTerm, this.sortColumnName, this.sortOrderName, this.advanceSearchParms, this.urlIdentifire);  */\n      }\n\n    });\n\n    return await changePassword_modal.present();\n  }\n  // choseHeader end\n  // addSmsDefault start\n  async addSmsDefault(_identifier, _item, _items) {\n    console.log('_identifier >>', _identifier);\n    let changePassword_modal;\n    changePassword_modal = await this.modalController.create({\n      component: ModalPage,\n      cssClass: 'mymodalClass small',\n      componentProps: { \n        identifier: _identifier,\n        modalForm_item: _item,\n        modalForm_array: _items\n      }\n    });\n    \n    // modal data back to Component\n    changePassword_modal.onDidDismiss()\n    .then((getdata) => {\n      console.log('getdata >>>>>>>>>>>', getdata);\n      // this.presentToast('Package End', 'success');\n      if(getdata.data == 'submitClose'){\n        /* this.onListData(this.listing_url, this.displayRecord, this.pageNo, this.api_parms, this.searchTerm, this.cherecterSearchTerm, this.sortColumnName, this.sortOrderName, this.advanceSearchParms, this.urlIdentifire);  */\n      }\n\n    });\n\n    return await changePassword_modal.present();\n  }\n  // addSmsDefault end \n  \n  selectTemplates(_data){\n    console.log('_data>>', _data);\n    this.selectdTag = _data;\n  }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'Your data have been saved.',\n      duration: 2000,\n      cssClass:\"my-tost-custom-classsuccess\",\n    });\n    toast.present();\n  }\n\n  // Get selectFieldForMsg start\n  selectFieldForMsg(_value){\n    console.log('_value', _value);\n\n    if(!this.model.stBody){\n      this.model.stBody = _value;\n    }else{\n      this.model.stBody = this.postionBeforeValue + _value + this.postionAfterValue;\n    }\n    \n    console.log('this.model.stBody', this.model.stBody);\n    \n  }\n  // Get selectFieldForMsg end\n\n  // getCursorPosition start\n  postionBeforeValue;\n  postionAfterValue;\n  getCursorPosition(oField, _value) {\n    console.log('_value', _value);\n    \n    \n    if (oField.selectionStart || oField.selectionStart == '0') {\n\n      console.log('oField.selectionStart', oField.selectionStart);\n\n      this.postionBeforeValue = _value.slice(0,oField.selectionStart);\n      this.postionAfterValue = _value.slice(oField.selectionStart);\n        \n      console.log('postionBeforeValue', this.postionBeforeValue);\n      console.log('postionAfterValue', this.postionAfterValue);\n    }\n  }\n  // getCursorPosition end\n\n  // ----------- destroy subscription start ---------\n  ngOnDestroy() {\n    if(this.formSubmitSubscribe !== undefined){\n      this.formSubmitSubscribe.unsubscribe();\n    }\n    if(this.editDataSubscribe !== undefined ){\n      this.editDataSubscribe.unsubscribe();\n    }\n  }\n  // destroy subscription end\n}\n","export default \".btn-md {\\n  padding: 0.53rem 1.3rem !important;\\n}\\n\\ntextarea {\\n  height: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1zbXMtbm90aWZpY2F0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtDQUFBO0FBQ0o7O0FBQ0E7RUFDSSxhQUFBO0FBRUoiLCJmaWxlIjoiYWRkLXNtcy1ub3RpZmljYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1tZCB7XG4gICAgcGFkZGluZzogLjUzcmVtIDEuM3JlbSAhaW1wb3J0YW50O1xufVxudGV4dGFyZWEge1xuICAgIGhlaWdodDogMTUwcHg7XG59Il19 */\";","export default \"<!-- common header show -->\\n<common-header></common-header>\\n\\n<ion-content>\\n  <div class=\\\"page-body\\\">\\n    <div class=\\\"page-wrapper\\\">\\n      <div class=\\\"form-layout\\\">\\n        <div class=\\\"card-outer\\\">\\n          <div class=\\\"card card-box\\\">\\n            <form #addSmsnoticForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitForm(addSmsnoticForm)\\\">\\n              <div class=\\\"card-header\\\">\\n                  <div class=\\\"card-header-tittle\\\">\\n                    SMS Template {{parms_action_name}}\\n                  </div>\\n                  <div class=\\\"card-header-action\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"form-wrapper\\\">\\n                  <ion-grid>\\n                    <ion-row>\\n                       <!-- Template For -->\\n                       <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item ngsel\\\">\\n                         <!--  <ion-badge class=\\\"pillBtn\\\" color=\\\"primary\\\" (click)=\\\"AddSmsTemplate('AddSmsTemplate_modal', get_user_dtls, '');\\\">\\n                            <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n                            Add\\n                          </ion-badge> -->\\n                         <!--  <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Template For </mat-label>\\n                            <mat-select [(value)]=\\\"selectedTemplate\\\" [(ngModel)]=\\\"model.stAction\\\" name=\\\"stAction\\\" required>\\n                              <mat-option (click)=\\\"selectTemplates(template.stTags)\\\" [value]=\\\"template.stName\\\" *ngFor=\\\"let template of templates\\\">{{ template.stName }}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field> -->\\n                           \\n                          <ng-select [items]=\\\"Templates\\\" \\n                                   bindLabel=\\\"etAction\\\" \\n                                   name=\\\"etAction\\\"\\n                                   placeholder=\\\"Select Template For\\\"\\n                                   bindValue=\\\"etAction\\\" \\n                                   [(ngModel)]=\\\"model.etAction\\\"\\n                                   (change)=\\\"selectTemplates(model.etAction)\\\">\\n                          </ng-select>\\n                          <label>Template For</label>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Template name -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item\\\">\\n                          <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Template Name </mat-label>\\n                            <input matInput placeholder=\\\"Template Name\\\" type=\\\"text\\\" name=\\\"stName\\\" [(ngModel)]=\\\"model.stName\\\" required>\\n                          </mat-form-field>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Chose Header Id -->\\n                      <!-- <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item\\\">\\n                          <ion-badge class=\\\"pillBtn\\\" color=\\\"primary\\\" (click)=\\\"choseHeader('choseHeader_modal', get_user_dtls, '');\\\">\\n                            <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n                            Add\\n                          </ion-badge>\\n                          <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Chose Header Id </mat-label>\\n                            <mat-select [(value)]=\\\"selectedHeader\\\" [(ngModel)]=\\\"model.stTempId\\\" name=\\\"stTempId\\\">\\n                              <mat-option [value]=\\\"headerId.name\\\" *ngFor=\\\"let headerId of headerIds\\\">{{ headerId.name }}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </div>\\n                      </ion-col> -->\\n                      <!-- Set Default -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item ngsel\\\">\\n                         <!--  <ion-badge class=\\\"pillBtn\\\" color=\\\"primary\\\"  (click)=\\\"addSmsDefault('add_Sms_default_modal', get_user_dtls, '');\\\">\\n                            <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n                            Add\\n                          </ion-badge> -->\\n                          \\n                          <ng-select [items]=\\\"setDefaults\\\" \\n                                   bindLabel=\\\"name\\\" \\n                                   name=\\\"isPrimary\\\"\\n                                   placeholder=\\\"Select Set Default\\\"\\n                                   bindValue=\\\"id\\\" \\n                                   [(ngModel)]=\\\"model.isPrimary\\\"\\n                                   (change)=\\\"ngsel(model.isPrimary)\\\">\\n                          </ng-select>\\n                          <label>Set Default</label>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Template name -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"4\\\" size-md=\\\"4\\\"  size-lg=\\\"4\\\">\\n                        <div class=\\\"form-item\\\">\\n                          <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Template Id </mat-label>\\n                            <input matInput placeholder=\\\"Header\\\" type=\\\"text\\\" name=\\\"stSubject\\\" [(ngModel)]=\\\"model.stSubject\\\" required>\\n                          </mat-form-field>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Useable tag -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\"  size-lg=\\\"12\\\" *ngIf=\\\"selectdTag\\\">\\n                        <div class=\\\"card-outer\\\">\\n                          <div class=\\\"card card-box\\\">\\n                            <div class=\\\"card-header\\\">\\n                              <div class=\\\"card-header-tittle\\\">\\n                                Useable tags for template body:\\n                              </div>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                              {{selectdTag}}\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </ion-col>\\n                      <!-- Template Description -->\\n                      <!-- <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\"  size-lg=\\\"12\\\">\\n                        <div class=\\\"form-item\\\">\\n                          <ion-label>Template Body </ion-label>\\n                          <div class=\\\"text-editor\\\">\\n                            <tinymce  name=\\\"stBody\\\" [(ngModel)]=\\\"model.stBody\\\" required></tinymce>\\n                          </div>\\n                        </div>\\n                      </ion-col> -->\\n                    </ion-row>\\n                    <ion-row>\\n                      <!-- Message Text -->\\n                      <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"6\\\"  size-lg=\\\"6\\\">\\n                        <div class=\\\"form-item ngsel\\\">\\n                           <ng-select [items]=\\\"selectFieldVariable\\\" \\n                                    bindLabel=\\\"name\\\" \\n                                    name=\\\"msgVariable\\\"\\n                                    placeholder=\\\"Select field\\\"\\n                                    bindValue=\\\"id\\\" \\n                                    [(ngModel)]=\\\"model.msgVariable\\\"\\n                                    (change)=\\\"selectFieldForMsg(model.msgVariable)\\\">\\n                           </ng-select>\\n                           <label>Select field</label>\\n                         </div>\\n                        <div class=\\\"form-item\\\">\\n                          <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Message Text</mat-label>\\n                            <textarea #msgText (click)=\\\"getCursorPosition(msgText, model.stBody)\\\" (keyup)=\\\"getCursorPosition(msgText, model.stBody)\\\" matInput name=\\\"stBody\\\" [(ngModel)]=\\\"model.stBody\\\" required></textarea>\\n                          </mat-form-field>\\n                        </div>\\n                        <p *ngIf=\\\"model.stBody\\\" class=\\\"informationTxt\\\"><span>{{model?.stBody?.length}}</span> Characters Used.  |  Count <span>{{model?.stBody?.length / 120  | number: '1.0-0'}}</span></p> \\n                      </ion-col>\\n                      <!-- Message view -->\\n                      <ion-col *ngIf=\\\"model.stBody\\\" size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"6\\\"  size-lg=\\\"6\\\">\\n                        <div class=\\\"msgViewBox\\\">\\n                          <p class=\\\"msgHeading\\\">Message view</p>\\n                          <p class=\\\"msgBody\\\">{{model?.stBody}}</p>\\n                        </div>\\n                      </ion-col>\\n                    </ion-row>\\n                  </ion-grid>\\n                </div>\\n              </div>\\n              <div class=\\\"card-footer\\\">\\n                  <div>\\n                      <button class=\\\"border-btn danger btn-md\\\" type=\\\"reset\\\" [routerLink]=\\\"['/', 'sms-notification-list']\\\" style=\\\"margin-right: 10px;\\\" mat-stroked-button>Cancel</button>\\n                      <button class=\\\"fill-btn btn-md\\\" mat-stroked-button type=\\\"submit\\\" [disabled]=\\\"!addSmsnoticForm.valid || formLoading\\\">\\n                      <ion-spinner *ngIf=\\\"formLoading\\\" name=\\\"crescent\\\"></ion-spinner>\\n                      Save\\n                      </button>\\n                  </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\\n\\n<!-- common footer show -->\\n<common-footer></common-footer>\";"]}