{"version":3,"sources":["webpack:///src/app/pages/auth/auth-routing.module.ts","webpack:///src/app/pages/auth/auth.module.ts","webpack:///src/app/pages/auth/auth.page.ts","webpack:///src/app/pages/auth/auth.page.scss","webpack:///src/app/pages/auth/auth.page.html"],"names":["routes","path","component","AuthPage","AuthPageRoutingModule","NgModule","imports","RouterModule","exports","AuthPageModule","CommonModule","FormsModule","IonicModule","SharedModule","declarations","menuCtrl","authService","router","loadingController","http","alertCtrl","commonUtils","modalController","appComponent","main_url","environment","file_url","hide","isLoading","isLogin","enable","formSubmitSubscribe","globalparamsData","subscribe","res","console","log","undefined","token","navigateByUrl","getSiteInfoObservable","siteInfo","form","value","valid","email","password","authenticate","_form","form_data","create","keyboardClose","message","then","loadingEl","present","authObs","login","resData","status","presentToast","setTimeout","reset","dismiss","errRes","header","buttons","alertEl","_identifier","_item","_items","ModalPage","cssClass","componentProps","identifier","modalForm_item","modalForm_array","profileDetails_modal","onDidDismiss","getdata","data","unsubscribe","MenuController","AuthService","Router","LoadingController","HttpClient","AlertController","CommonUtils","ModalController","AppComponent","Component","selector","template"],"mappings":"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","file":"src_app_pages_auth_auth_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPageRoutingModule } from './auth-routing.module';\n\nimport { AuthPage } from './auth.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule, //Share module import\n    AuthPageRoutingModule\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController, MenuController, ModalController } from '@ionic/angular';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppComponent } from 'src/app/app.component';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { CommonUtils } from 'src/app/services/common-utils/common-utils';\nimport { environment } from 'src/environments/environment';\nimport { ModalPage } from '../modal/modal.page';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n\n  main_url = environment.apiUrl;\n  file_url = environment.fileUrl;\n  hide = true;\n\n  isLoading = false;\n  siteInfo;\n  isLogin = true;\n  userTypes;\n  private formSubmitSubscribe: Subscription;\n  \n  constructor(\n    public menuCtrl: MenuController,\n    private authService:AuthService,\n    private router:Router,\n    private loadingController: LoadingController,\n    private http : HttpClient,\n    private alertCtrl: AlertController,\n    private commonUtils: CommonUtils,\n    private modalController : ModalController,\n    private appComponent: AppComponent\n  ) { }\n\n  ngOnInit() {\n    // menu hide\n    this.menuCtrl.enable(false);\n\n    this.formSubmitSubscribe =  this.authService.globalparamsData.subscribe(res => {\n      console.log('authService',res);\n      \n      if(res && res != null && res != undefined && res != ''){\n        if(res.token != undefined ){\n          this.router.navigateByUrl('/dashboard');\n        }\n      }\n    });\n\n    // get Site Info\n    this.formSubmitSubscribe = this.commonUtils.getSiteInfoObservable.subscribe(res =>{\n      this.siteInfo = res;\n    })\n  }\n  site_path;\n  site_href;\n  site_href_split;\n  site_path_split;\n  ionViewWillEnter() {\n    \n    // get Site Info\n    this.formSubmitSubscribe = this.commonUtils.getSiteInfoObservable.subscribe(res =>{\n      this.siteInfo = res;\n    })\n\n    /* this.site_path = window.location.pathname;\n    this.site_href = window.location.href;\n    this.site_href_split = window.location.href.split('/')[1];\n    this.site_path_split = window.location.pathname.split('/')[1]; */\n\n    // this.appComponent.userInfoData();\n\n    // menu hide\n    this.menuCtrl.enable(false);\n\n    this.formSubmitSubscribe =  this.authService.globalparamsData.subscribe(res => {\n      if(res && res != null && res != undefined && res != ''){\n        if(res.token != undefined ){\n          this.router.navigateByUrl('/dashboard');\n        }\n      }\n    });\n\n  }\n\n\n  onSwitchAuthMode(){\n    this.isLogin =! this.isLogin;\n  }\n\n  //---------------- login form submit start-----------------\n    onSubmitForm(form:NgForm){\n      this.isLoading = true;\n      console.log('form >>', form.value);\n      if(!form.valid){\n        return;\n      }\n      const email = form.value.email;\n      const password = form.value.password;\n\n      if(this.isLogin){\n        // login server data send\n      }else{\n        // signup server data send\n      }\n\n      this.authenticate(form, form.value);\n      // form.reset();\n\n    }\n\n    // authenticate function\n    authenticate(_form, form_data) {\n      this.isLoading = true;\n      this.loadingController\n        .create({ keyboardClose: true, message: 'Logging in...' })\n        .then(loadingEl => {\n          loadingEl.present();\n          let authObs: Observable<any>;\n          \n          \n          if (this.isLogin) {\n            authObs = this.authService.login('login/superAdminLogin', form_data, '');\n            console.log('###########>>>', authObs);\n            console.log('######form_data#####>>>', form_data);\n            \n          } else {\n            // authObs = this.authService.signup(email, password);\n          }\n          console.log('authenticate@@', authObs);\n          console.log('authenticate...........');\n          this.formSubmitSubscribe = authObs.subscribe(\n            resData => {\n              console.log('resData =============))))))))))))))>', resData);\n              if(resData.status == 200)\n              {\n                console.log('user Type =============))))))))))))))>', resData);\n                /* this.userTypes = this.commonUtils.userTypes;\n                console.log('user Type =============))))))))))))))>', this.userTypes); */\n\n                // this.appComponent.userInfoData();\n                // this.appComponent.initializeApp();\n\n                /* if(resData.return_data.user_type == 'group'){\n                  this.router.navigateByUrl('/dashboard');\n                }else{\n                  this.router.navigateByUrl('/transaction-list');\n\n                } */\n\n                this.router.navigateByUrl('/dashboard');\n                this.commonUtils.presentToast('success', resData.message);\n                \n                /* setTimeout(() => {\n                  // user menu call\n                  this.appComponent.userInfoData();\n                }, 10); */\n\n                setTimeout(() => {\n                  _form.reset();\n                  loadingEl.dismiss();\n\n                }, 2000);\n                \n                \n              }else{\n                loadingEl.dismiss();\n                this.commonUtils.presentToast('error', resData.message);\n              }\n              \n              // console.log(\"data login after resData ++++++>\", resData);\n              this.isLoading = false;\n              // loadingEl.dismiss();\n              // this.router.navigateByUrl('/places/tabs/discover');\n            },\n            errRes => {\n              loadingEl.dismiss();\n            }\n          );\n        });\n    }\n  // login form submit end\n\n    private showAlert(message: string) {\n      this.alertCtrl\n        .create({\n          header: 'Authentication failed',\n          message: message,\n          buttons: ['Okay']\n        })\n        .then(alertEl => alertEl.present());\n    }\n\n    // ..... resetPasswordOpenModal start ......\n    async resetPasswordOpenModal(_identifier, _item, _items) {\n      // console.log('_identifier >>', _identifier);\n      let profileDetails_modal;\n      profileDetails_modal = await this.modalController.create({\n        component: ModalPage,\n        cssClass: 'mymodalClass password',\n        componentProps: { \n          identifier: _identifier,\n          modalForm_item: _item,\n          modalForm_array: _items\n        }\n      });\n      \n      // modal data back to Component\n      profileDetails_modal.onDidDismiss()\n      .then((getdata) => {\n        console.log('getdata >>>>>>>>>>>', getdata);\n        if(getdata.data == 'submitClose'){\n        }\n\n      });\n\n      return await profileDetails_modal.present();\n    }\n    // resetPasswordOpenModal end \n\n  // ----------- destroy subscription start ---------\n  ngOnDestroy() {\n    if(this.formSubmitSubscribe !== undefined){\n      this.formSubmitSubscribe.unsubscribe();\n    }\n  }\n  // destroy subscription end\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdXRoLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-content class=\\\"login-view\\\">\\n  <div class=\\\"login-page\\\">\\n    <div class=\\\"login-wrapper\\\">\\n      <div class=\\\"login-inner\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size-md=\\\"12\\\" size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\n              <div class=\\\"login-form\\\">\\n                <div class=\\\"form-inner\\\">\\n                  <div class=\\\"form-header\\\">\\n                    <div class=\\\"form-header-top\\\">\\n                      <p>Welcome To</p>\\n                    </div>\\n                    <div class=\\\"form-header-middle\\\">\\n                      <img src=\\\"assets/images/logo.png\\\">\\n                    </div>\\n                    <div class=\\\"form-header-bottom\\\">\\n                      <p>\\n                        Login in to get in the moment updates on the things that interest you.\\n                      </p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-body\\\">\\n                    <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitForm(loginForm)\\\" (keyup.enter)=\\\"onSubmitForm(loginForm)\\\">\\n                      <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-icon matPrefix>person</mat-icon>\\n                        <mat-label>Username</mat-label>\\n                        <input matInput placeholder=\\\"Username\\\" ngModel\\n                        type=\\\"text\\\"\\n                        name=\\\"userName\\\"\\n                        required\\n                        clearInput>\\n                      </mat-form-field>\\n                      <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-icon matPrefix>lock</mat-icon>\\n                        <mat-label>Password</mat-label>\\n                        <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" ngModel\\n                        name=\\\"password\\\"\\n                        required\\n                        minlenth=\\\"2\\\"\\n                        #passwordCtrl=\\\"ngModel\\\"\\n                        clearInput>\\n                        <span mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                        </span>\\n                      </mat-form-field>\\n                      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"signInBtn\\\" mat-raised-button>Sign In</button>\\n                    </form>\\n                  </div>\\n                  <p class=\\\"forgotpassword\\\">\\n                    <a [routerLink]=\\\"['/forgotpassword']\\\">Forgot Password</a></p>\\n                  <div class=\\\"form-footer\\\">\\n                    <!-- <p class=\\\"notice\\\">\\n                      Don't have an account? \\n                      <span>Sign Up Now</span>\\n                    </p> -->\\n                    <p class=\\\"devider\\\"><span>OR</span></p>\\n                    <div class=\\\"social-icons\\\">\\n                      <p>Continue with social media</p>\\n                      <div class=\\\"social-buttons\\\">\\n                        <button mat-mini-fab class=\\\"facebook\\\">\\n                          <ion-icon name=\\\"logo-facebook\\\"></ion-icon>\\n                        </button>\\n                        <button mat-mini-fab class=\\\"twitter\\\">\\n                          <ion-icon name=\\\"logo-twitter\\\"></ion-icon>\\n                        </button>\\n                        <button mat-mini-fab class=\\\"google\\\">\\n                          <ion-icon name=\\\"logo-google\\\"></ion-icon>\\n                        </button>\\n                        <button mat-mini-fab class=\\\"linkedin\\\">\\n                          <ion-icon name=\\\"logo-linkedin\\\"></ion-icon>\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </ion-col>\\n            <ion-col size-md=\\\"12\\\" size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-lg=\\\"6\\\">\\n              <div class=\\\"login-bg\\\">\\n                <div class=\\\"powered-by\\\">\\n                  <img src=\\\"assets/images/company-logo.png\\\">\\n                  <p>A complete product of Technosoft Software Solution</p>\\n                </div>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\\n\";"]}